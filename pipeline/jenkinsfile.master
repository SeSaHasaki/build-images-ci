#!groovy
pipeline {
    agent any
	environment{
        EMAIL_LIST='sangjing@leinao.ai'
        //DIR="`git log -1 --name-only -- . | grep Dockerfile | awk -F "/" '{print$2}'`"
    }
	options {
        timeout(time: 15, unit: 'MINUTES')
		buildDiscarder(logRotator(numToKeepStr: '30'))
    }
    stages {
		stage('代码检查') {
            steps {
				echo '代码检查'
				echo "${WORKSPACE}"
				echo "${JOB_BASE_NAME}/images"
			}
        }

		stage('镜像编译并上传至仓库') {
            steps {
                dir('images/test_dir'){
                    script {
                        docker.withRegistry('http://10.12.4.26:5000') {
                            sh "bash ${WORKSPACE}/pipeline/ENV.sh"
                            def CHANGE_DIR = readFile "${WORKSPACE}/pipeline/CHANGE_DIR"
                            //dir("${CHANGE_DIR}"){
                                if ("${CHANGE_DIR}" != ' '){
                                    def imageName = "10.12.4.26:5000/user-images/sangjing:${BUILD_NUMBER}"
                                    def dockerFile = "-f Dockerfile ."
                                    docker.build(imageName,dockerFile).push()
                                }
                                else{
                                    echo "本次更新无镜像产生，原因：无Dockerfile更新"
                                }
                            //}
                        }
                    }
                }
            }
        }

		stage('更新数据库') {
            steps {
				echo '更新数据库'
			}
        }
    }

	post {
        always {
			echo '流水线已停止'
        }
		changed{
			echo '流水线状态已改变'
		}
		unstable{
			echo '流水线不稳定'
		}
		failure{
   			echo '流水线失败'
   			//emailext body: '$DEFAULT_CONTENT', subject: '严重！ $DEFAULT_SUBJECT', to: "${EMAIL_LIST}"
   		}
   		success{
   			echo '流水线成功'
   			emailext body: '$DEFAULT_CONTENT', subject: '恭喜！ $PROJECT_NAME - Build # $BUILD_NUMBER - 构建成功!', to: "${EMAIL_LIST}"
   		}
   		aborted{
   			echo '流水线已被用户终止'
   			emailext body: '${JELLY_SCRIPT,template="html"}', subject: '已终止! $PROJECT_NAME - Build # $BUILD_NUMBER', to: "${EMAIL_LIST}"
   		}
    }
}