#!groovy
pipeline {
    agent any
	environment{
        EMAIL_LIST='sangjing@leinao.ai'
    }
	options {
        timeout(time: 15, unit: 'MINUTES')
		buildDiscarder(logRotator(numToKeepStr: '30'))
    }
    stages {
		stage('代码检查') {
            steps {
				echo '本次更新如下：'
				sh 'echo `git log -1 --name-only |awk \'{{printf"%s,",$0}}\'|awk -F ",," \'{print$3}\'`'

				sh 'cat Dockerfile | grep MAINTAINER | awk \'{print $2}\' > PROVIDER'
				echo "文件路径：${WORKSPACE}"
				echo "用户镜像存储路径：${JOB_BASE_NAME}/images"
			}
        }

		stage('镜像编译并上传至仓库') {
            steps {
                dir('pipeline'){
                    script {
                        docker.withRegistry('http://10.12.4.26:5000') {
                            sh 'git log -1 --name-only -- | grep Dockerfile | awk -F \'/\' \'{print$2}\'| tr \'A-Z\' \'a-z\' > CHANGE_DIR'
                            def CHANGE_DIR = readFile("${WORKSPACE}/pipeline/CHANGE_DIR").split("\r?\n").each {
                                println it
                            }
                            if ("${CHANGE_DIR}" != '[]'){
                                dir("${WORKSPACE}/images/${CHANGE_DIR[0]}"){
                                    def imageName = "10.12.4.26:5000/user-images/${CHANGE_DIR[0]}:${BUILD_NUMBER}"
                                    def dockerFile = "-f Dockerfile ."
                                    docker.build(imageName,dockerFile).push()
                                    echo "产生更新镜像，镜像名称：${imageName}"
                                }
                            }
                            else{
                                echo "本次更新无镜像产生，原因：无Dockerfile更新"
                                sh 'exit 0'
                            }
                        }
                    }
                }
            }
        }

		stage('更新数据库') {
            steps {
                dir("${WORKSPACE}/pipeline"){
                echo '更新数据库'
                    script {
                        def CHANGE_DIR = readFile("${WORKSPACE}/pipeline/CHANGE_DIR").split("\r?\n").each {
                                println it
                        }
                        def imageName = "10.12.4.26:5000/user-images/${CHANGE_DIR[0]}:${BUILD_NUMBER}"
                        sh "python update_mysql.py ${imageName}"
                    }
				}
			}
        }
    }

	post {
        always {
			echo '流水线已停止'
        }
		changed{
			echo '流水线状态已改变'
		}
		unstable{
			echo '流水线不稳定'
		}
		failure{
   			echo '流水线失败'
   			//emailext body: '$DEFAULT_CONTENT', subject: '严重！ $DEFAULT_SUBJECT', to: "${EMAIL_LIST}"
   		}
   		success{
   			echo '流水线成功'
   			emailext body: '$DEFAULT_CONTENT', subject: '恭喜！ $PROJECT_NAME - Build # $BUILD_NUMBER - 构建成功!', to: "${EMAIL_LIST}"
   		}
   		aborted{
   			echo '流水线已被用户终止'
   			emailext body: '${JELLY_SCRIPT,template="html"}', subject: '已终止! $PROJECT_NAME - Build # $BUILD_NUMBER', to: "${EMAIL_LIST}"
   		}
    }
}